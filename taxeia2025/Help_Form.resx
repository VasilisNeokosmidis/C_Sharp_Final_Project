<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBoxOverview.Text" xml:space="preserve">
    <value>Καλώς ήρθατε στον Peripatos Travel Guide!

Η εφαρμογή Peripatos είναι ο ιδανικός σύντροφος για την εξερεύνηση της πανέμορφης Πάρου!

Τι προσφέρει η εφαρμογή:

ΠΑΡΑΛΙΕΣ: Ανακαλύψτε τις καλύτερες παραλίες του νησιού

ΑΞΙΟΘΕΑΤΑ: Εξερευνήστε ιστορικά μνημεία και αξιοθέατα

ΕΣΤΙΑΤΟΡΙΑ: Βρείτε τα καλύτερα εστιατόρια και ταβέρνες

ΠΑΡΟΥΣΙΑΣΗ: Δείτε βίντεο για την ομορφιά της Πάρου

ΙΣΤΟΡΙΚΟ: Παρακολουθήστε τις επισκέψεις σας (μόνο για εγγεγραμμένους)


Χαρακτηριστικά για Εγγεγραμμένους Χρήστες:
• Πρόσβαση σε όλες τις λειτουργίες
• Παρακολούθηση ιστορικού επισκέψεων
• Αποθήκευση αρχείων τοπικά
• Προσωποποιημένη εμπειρία

Ξεκινήστε την εξερεύνηση και ανακαλύψτε τα μυστικά της Πάρου!</value>
  </data>
  <data name="richTextBoxGuide.Text" xml:space="preserve">
    <value>Οδηγός Χρήσης Βήμα-Βήμα

1. ΕΝΑΡΞΗ ΕΦΑΡΜΟΓΗΣ
• Όταν ανοίγει η εφαρμογή, θα δείτε την αρχική οθόνη
• Επιλέξτε αν θέλετε να συνδεθείτε ή να συνεχίσετε ως επισκέπτης

2. ΕΓΓΡΑΦΗ/ΣΥΝΔΕΣΗ
• Εγγραφή: Κλικ στο "Εγγραφή" για δημιουργία λογαριασμού
  - Απαιτείται κωδικός ≥10 χαρακτήρες, κεφαλαίο, σύμβολο, αριθμό
• Σύνδεση: Εισάγετε username/password
• Επισκέπτης: Περιορισμένη πρόσβαση χωρίς εγγραφή

3. ΠΛΟΗΓΗΣΗ ΣΤΙΣ ΦΟΡΜΕΣ
• Χρησιμοποιήστε το κεντρικό μενού για πλοήγηση
• Κάθε φόρμα έχει δικά της κουμπιά και λειτουργίες

4. ΧΡΗΣΗ ΦΟΡΜΩΝ
Παραλίες/Αξιοθέατα/Εστιατόρια:
• Περιήγηση με κουμπιά Προηγούμενο/Επόμενο
• Dropdown λίστα για άμεση πρόσβαση
• Slideshow εικόνων (αυτόματο ή manual)
• Voice narration (εγγεγραμμένοι χρήστες)
• Αποθήκευση αρχείων (εγγεγραμμένοι χρήστες)

Παρουσίαση:
• Κλικ για προβολή βίντεο (μόνο εγγεγραμμένοι)

Ιστορικό:
• Παρακολούθηση επισκέψεων σε φόρμες
• Progress bar για ποσοστό completion
• Καθαρισμός ιστορικού

5. ΣΥΝΤΟΜΕΥΣΕΙΣ ΠΛΗΚΤΡΟΛΟΓΙΟΥ
• F1: Βοήθεια (οποιαδήποτε φόρμα)
• Esc: Κλείσιμο φόρμας
• Enter: Επόμενη εικόνα (slideshow)</value>
  </data>
  <data name="richTextBoxFeatures.Text" xml:space="preserve">
    <value>Αναλυτική Περιγραφή Λειτουργιών

ΦΟΡΜΑ ΠΑΡΑΛΙΩΝ
• Πλοήγηση σε συλλογή παραλιών της Πάρου
• Περιγραφές και εικόνες για κάθε παραλία
• Αυτόματο slideshow εικόνων
• Voice narration για εγγεγραμμένους
• Αποθήκευση πληροφοριών τοπικά

ΦΟΡΜΑ ΑΞΙΟΘΕΑΤΩΝ
• Ιστορικά μνημεία και αρχαιολογικοί χώροι
• Εκκλησίες και παραδοσιακά κτίρια
• Πολιτιστικά σημεία ενδιαφέροντος
• Ίδιες λειτουργίες με Παραλίες

ΦΟΡΜΑ ΕΣΤΙΑΤΟΡΙΩΝ
• Επιλεγμένα εστιατόρια και ταβέρνες
• Περιγραφές κουζίνας και ατμόσφαιρας
• Τοποθεσίες και πληροφορίες επικοινωνίας
• Φωτογραφίες από φαγητά και χώρους

ΦΟΡΜΑ ΠΑΡΟΥΣΙΑΣΗΣ
• Για εγγεγραμμένους χρήστες: Πρόσβαση σε βίντεο για την Πάρο
• Για επισκέπτες: Μήνυμα περιορισμού πρόσβασης
• Κλικ για άνοιγμα βίντεο σε εξωτερικό player

ΦΟΡΜΑ ΙΣΤΟΡΙΚΟΥ
• Μόνο για εγγεγραμμένους χρήστες
• Παρακολούθηση επισκέψεων σε κάθε φόρμα
• Progress bar για ποσοστό εξερεύνησης
• Ημερομηνία/ώρα τελευταίας επίσκεψης
• Καθαρισμός ιστορικού με επιβεβαίωση
• Ανανέωση δεδομένων

ΔΙΑΧΕΙΡΙΣΗ ΛΟΓΑΡΙΑΣΜΟΥ
• Εγγραφή: Δημιουργία νέου λογαριασμού με ασφαλή κωδικό
• Σύνδεση: Πρόσβαση με υπάρχοντα στοιχεία
• Αποσύνδεση: Έξοδος από λογαριασμό
• Επισκέπτης: Πρόσβαση χωρίς εγγραφή (περιορισμένη)

ΑΠΟΘΗΚΕΥΣΗ ΔΕΔΟΜΕΝΩΝ
• Εγγεγραμμένοι: Αποθήκευση φακέλων με εικόνες και περιγραφές
• Επισκέπτες: Δεν έχουν δυνατότητα αποθήκευσης
• Επιλογή φακέλου προορισμού
• Αντιγραφή όλων των σχετικών αρχείων</value>
  </data>
  <data name="richTextBoxFAQ.Text" xml:space="preserve">
    <value>Συχνές Ερωτήσεις (FAQ)

Ε: Τι διαφορά έχει εγγεγραμμένος χρήστης από επισκέπτη;
Α: Οι εγγεγραμμένοι χρήστες έχουν:
• Πρόσβαση στο βίντεο παρουσίασης
• Voice narration στις φόρμες
• Αποθήκευση αρχείων τοπικά
• Ιστορικό επισκέψεων με προσωποποιημένα στατιστικά

Ε: Γιατί χρειάζεται τόσο περίπλοκος κωδικός;
Α: Για την ασφάλεια του λογαριασμού σας. Απαιτείται:
• Τουλάχιστον 10 χαρακτήρες
• Ένα κεφαλαίο γράμμα
• Ένας αριθμός
• Ένα ειδικό σύμβολο (!@#$%^&amp;*)

Ε: Πώς μπορώ να δω το ιστορικό μου;
Α: Μόνο εγγεγραμμένοι χρήστες έχουν πρόσβαση στο μενού "Ιστορικό" από την κορυφή της εφαρμογής.

Ε: Δεν παίζει το βίντεο. Τι κάνω;
Α: Ελέγξτε αν:
• Είστε συνδεδεμένοι ως εγγεγραμμένος χρήστης
• Υπάρχει το αρχείο βίντεο στο φάκελο Videos/
• Έχετε εγκατεστημένο media player στο σύστημά σας

Ε: Πώς αποθηκεύω πληροφορίες για μια παραλία;
Α: Ως εγγεγραμμένος χρήστης:
1. Πηγαίνετε στη φόρμα Παραλιών/Αξιοθεάτων/Εστιατορίων
2. Επιλέξτε την επιθυμητή τοποθεσία
3. Κλικ στο κουμπί "Αποθήκευση Αρχείου"
4. Επιλέξτε φάκελο προορισμού

Ε: Χάνεται το ιστορικό μου όταν κλείνω την εφαρμογή;
Α: Όχι! Το ιστορικό αποθηκεύεται στη βάση δεδομένων και διατηρείται μεταξύ των sessions.

Ε: Μπορώ να χρησιμοποιήσω την εφαρμογή χωρίς Internet;
Α: Ναι! Η εφαρμογή λειτουργεί πλήρως offline. Όλα τα δεδομένα είναι τοπικά αποθηκευμένα.

Ε: Υπάρχουν συντομεύσεις πληκτρολογίου;
Α: Ναι:
• F1: Άνοιγμα βοήθειας σε οποιαδήποτε φόρμα
• Enter: Επόμενη εικόνα στο slideshow
• Esc: Κλείσιμο τρέχουσας φόρμας

Ε: Πώς μπορώ να επικοινωνήσω για υποστήριξη;
Α: Δείτε την ενότητα "Πληροφορίες" για στοιχεία επικοινωνίας των δημιουργών.</value>
  </data>
  <data name="richTextBoxAbout.Text" xml:space="preserve">
    <value>Πληροφορίες Εφαρμογής

Peripatos Travel Guide
Ο ψηφιακός σας οδηγός για την Πάρο

Έκδοση: 1.0.0
Ημερομηνία: Δεκέμβριος 2024
Τεχνολογία: C# WinForms (.NET Framework 4.8 / .NET 8)
Βάση Δεδομένων: SQLite

ΟΜΑΔΑ ΑΝΑΠΤΥΞΗΣ
Αυτή η εφαρμογή αναπτύχθηκε ως μέρος ακαδημαϊκού έργου από:
• Άγγελος Μπερκέτης
• Βασίλης Νεοκοσμίδης

ΣΤΟΧΟΣ ΕΦΑΡΜΟΓΗΣ
Η δημιουργία ενός φιλικού προς τον χρήστη ψηφιακού οδηγού που θα βοηθήσει τους επισκέπτες της Πάρου να ανακαλύψουν τις ομορφιές του νησιού.

ΤΕΧΝΙΚΑ ΧΑΡΑΚΤΗΡΙΣΤΙΚΑ
• Architecture: Windows Forms με Core business logic
• Database: SQLite για τοπική αποθήκευση
• Security: Κρυπτογράφηση κωδικών χρηστών
• Media: Υποστήριξη εικόνων και βίντεο
• Localization: Πλήρης υποστήριξη ελληνικών

ΣΥΜΒΑΤΟΤΗΤΑ
• Windows 10/11
• .NET Framework 4.8+
• Ελάχιστη ανάλυση οθόνης: 800x600
• Χώρος αποθήκευσης: 100MB

ΑΔΕΙΑ ΧΡΗΣΗΣ
Αυτή η εφαρμογή αναπτύχθηκε για εκπαιδευτικούς σκοπούς.
Όλα τα δικαιώματα διατηρούνται από τους δημιουργούς.

ΕΥΧΑΡΙΣΤΙΕΣ
• Microsoft για το .NET Framework
• SQLite team για τη βάση δεδομένων
• Φωτογράφοι και δημιουργοί περιεχομένου για τη Πάρο

Σας ευχαριστούμε που χρησιμοποιείτε τον Peripatos Travel Guide!
Καλή εξερεύνηση της πανέμορφης Πάρου!

Για τεχνική υποστήριξη ή προτάσεις, επικοινωνήστε με την ομάδα ανάπτυξης.</value>
  </data>
</root>